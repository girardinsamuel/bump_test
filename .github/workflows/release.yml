name: Release

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install bumpversion
        run: pip install -r requirements.txt
      - name: Parse version
        id: vars
        run: echo ::set-output name=version::${$(echo $GITHUB_REF | sed 's#.*/v##')}
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.version }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.version }}
      - name: Bump version from release
        shell: bash
        env:
          # or in bash VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
          VERSION: ${{ github.event.release.tag_name }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # here last arg is mandatory but not used (cf https://github.com/c4urself/bump2version/issues/22)
          bump2version --verbose --new-version $VERSION patch
      # this won't trigger an other workflow because github token is used and not personal_access_token
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.release.target_commitish }}  # name of release target branch
      # here we could continue and publish to pypi